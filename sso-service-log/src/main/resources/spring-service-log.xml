<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
    http://www.springframework.org/schema/context   
    http://www.springframework.org/schema/context/spring-context-3.0.xsd  
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/task 
    http://www.springframework.org/schema/task/spring-task-3.0.xsd     
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<import resource="spring-dubbo-log.xml" />
	<import resource="spring-dubbo-rest-log.xml" />

	<!-- 定时器开关 开始 -->
	<task:annotation-driven />
	<!-- 定时器开关 结束 -->
	<!-- 标注类型 的事务配置 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	<!-- 读取资源文件 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:uaop_config.properties</value>
			</list>
		</property>
	</bean>

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="url" value="${db_url}" />
		<property name="username" value="${db_username}" />
		<property name="password" value="${db_password}" />
		<property name="driverClassName" value="${db_driverclassname}" />
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="dataSource" ref="dataSource" />
		<!-- 自动匹配Mapper映射文件 -->
		<property name="mapperLocations" value="classpath:mappings/**/*-mapper.xml" />
		<property name="typeAliasesPackage" value="com.hisign.sso.api.entity" />
		<property name="plugins">
			<array>
				<bean class="com.github.pagehelper.PageHelper">
					<property name="properties">
						<value>
							dialect=oracle
						</value>
					</property>
				</bean>
			</array>
		</property>
	</bean>

	<!-- 通过扫描的模式，扫描目录在com.hisign.publicsafety.mapper目录下，所有的mapper都继承SqlMapper接口的接口， 
		这样一个bean就可以了 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<property name="basePackage" value="com.hisign.sso.persist.mapper" />
	</bean>

	<!-- 事务配置 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 使用Spring组件扫描的方式来实现自动注入bean -->
	<context:component-scan base-package="com.hisign.sso.service" />
	<context:component-scan base-package="com.hisign.sso.service" />

	<!-- 隐式地向 Spring 容器注册 -->
	<context:annotation-config />

	<bean id="transactionTemplate"
		class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager" ref="transactionManager" />
	</bean>

	<bean id="sysParamService" class="com.hisign.sdk.config.service.impl.SysParamServiceImpl">
	</bean>
</beans>